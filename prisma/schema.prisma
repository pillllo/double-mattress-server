generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId             String   @id @unique
  firstName          String
  email              String   @unique
  currency           String   @default("EUR")
  linkedUserIds      String[]
  stripeCustomerId   String?  @default("")
  activeSubscription Boolean  @default(false)
}

model Transaction {
  transactionId   String   @id @unique
  transactionType String
  userId          String
  amount          Int
  currency        String   @default("EUR")
  category        String
  date            DateTime
  description     String   @db.VarChar(255)
  includeAvg      Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model TransactionAggregate {
  id                         Int    @id @default(autoincrement())
  userId                     String
  year                       Int
  month                      Int // one-based i.e. Feb is 2
  monthName                  String
  periodType                 String @default("month")
  categoriesForPeriod        Json
  incomeForPeriod            Int
  expensesForPeriod          Int
  savingsForPeriod           Int
  cumulativeSavingsSinceJoin Int
}

model ProjectedChange {
  id          String   @id @unique
  type        String
  userId      String
  amount      Int
  currency    String   @default("EUR")
  category    String
  date        DateTime
  description String   @db.VarChar(255)
  includeAvg  Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Notification {
  notificationId Int      @id @default(autoincrement())
  forUserId      String
  fromUserId     String?
  fromUserName   String?  @default("System")
  date           DateTime @default(now())
  message        String
  read           Boolean  @default(false)
}

model ConnectionRequest {
  id               Int       @id @default(autoincrement())
  initiatingUserId String
  targetUserId     String
  createdOn        DateTime  @default(now())
  respondedOn      DateTime?
  status           String    @default("open")
}
