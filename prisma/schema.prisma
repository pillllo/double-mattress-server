// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model User {
//   id        Int       @id @default(autoincrement())
//   email     String    @unique
//   userId    String    @unique
//   createdAt DateTime  @default(now())
//   profile   Profile?  @relation(fields: [profileId], references: [id])
//   profileId Int?
//   Profile   Profile[] @relation("user")
// }

model User {
  id           Int      @id @default(autoincrement())
  userId       String
  // TODO: Reference by id of GUID userId
  firstName    String
  currency     String?
  linkedUserId String[]
  // Relations
  // transactions Transaction[]
}

// model Transaction {
//   // id              Int      @id @default(autoincrement())
//   // createdAt       DateTime @default(now())
//   // updatedAt       DateTime @updatedAt
//   // transactionId   String   @unique
//   // transactionType String
//   // user

//   // // TODO: Reference by id of GUID userId
//   // // userId          String
//   // // user            Profile  @relation(name: "user", fields: [userId], references: [userId])
//   // // // TODO: Reference by id of GUID userId
//   // // otherUserId     String
//   // // otherUser       Profile  @relation(name: "partner", fields: [otherUserId], references: [userId])
//   // amount          Int
//   // currency        String
//   // category        String
//   // // TODO: settle on format & variable naming -> do we need it?
//   // date            DateTime
//   // description     String   @db.VarChar(255)
//   // includeAvg      Boolean  @default(true)
//   // // Profile         Profile? @relation(fields: [profileId], references: [id])
//   // // profileId       Int?
//   // User            User?    @relation(fields: [userId], references: [id])
//   // userId          Int?
// }
